name: Docker CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: docker-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker Compose
        env :
          JWT_SECRET : myjwtsecret
          UPLOAD_DIR : /uploads
          DB_USER : myuser
          DB_PASS : mypassword
          DB_NAME : streaum
          PORT: 8080
        run: docker compose build

      - name: Start containers
        env:
          PORT: 8080
        run: docker compose up -d

      - name: Wait for app to be ready
        env:
          PORT: 8080
        shell: bash
        run: |
          echo "Waiting for http://127.0.0.1:${PORT}/ ..."
          for i in {1..60}; do
            if curl -fsS "http://127.0.0.1:${PORT}/" -o /dev/null; then
              echo "App is responding."
              exit 0
            fi

            if ! docker ps --filter "name=streaum-app-1" --filter "status=running" --format '{{.Names}}' | grep -q '^streaum-app-1'; then
              echo "Container exited unexpectedly. Logs:"
              docker logs streaum-app-1 || true
              exit 1
            fi

            sleep 2
          done

          echo "Timed out waiting for app to respond."
          docker logs streaum-app-1 || true
          exit 1

      - name: Smoke test root endpoint
        env:
          PORT: 8080
        shell: bash
        run: |
          STATUS=$(curl -sS -o /dev/null -w '%{http_code}' "http://127.0.0.1:${PORT}/")
          echo "HTTP status: $STATUS"
          if [ "$STATUS" -lt 200 ] || [ "$STATUS" -ge 400 ]; then
            echo "Unexpected HTTP status from root endpoint."
            docker logs streaum-app-1 || true
            exit 1
          fi

      - name: Show logs on failure
        if: failure()
        run: docker logs streaum-app-1 || true

      - name: Cleanup
        if: always()
        run: docker compose down